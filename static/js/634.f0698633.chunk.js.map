{"version":3,"file":"static/js/634.f0698633.chunk.js","mappings":"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","sources":["Pages/UserDashboardPages/UserDashboard.js","utils/useGetFormatedDate.js","Pages/UserDashboardPages/UserOrdersHistoryPage/OrderHistory.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport OrderHistory from './UserOrdersHistoryPage/OrderHistory';\r\nimport { PageNavContext } from '../../Provider/PageNavProvider';\r\nimport fetchData from '../../utils/fetchData';\r\nimport Spinner from '../../Shared/Spinner/Spinner';\r\n\r\nconst UserDashboard = () => {\r\n    const { setPageNav } = useContext(PageNavContext);\r\n    // fetch data\r\n    const [orders, setOrders] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            try {\r\n                // const result = await fetchData('http://localhost:3000/fakeOrders.json');\r\n                const result = await fetchData('./fakeOrders.json');\r\n                setOrders(result);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                setError(error);\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        getData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setPageNav([{ title: \"account\", navLink: \"/user/dashboard\" }, { title: \"dashboard\", navLink: \"\" }]);\r\n    }, [setPageNav])\r\n\r\n    if (error) return <p className='text-center h-[40vh] text-red-400 font-medium text-lg'>Error: {error.message}</p>;\r\n\r\n    return (\r\n        <>\r\n            <div className='flex flex-col md:flex-row justify-between gap-4 mb-4 '>\r\n                <aside className='text-center flex flex-col justify-center items-center space-y-1 border-solid border-2 border-gray-100 rounded-md w-full py-6'>\r\n                    <img\r\n                        className='h-24 w-24 rounded-full object-cover'\r\n                        loading=\"lazy\"\r\n                        src=\"https://static.vecteezy.com/system/resources/previews/002/275/847/original/male-avatar-profile-icon-of-smiling-caucasian-man-vector.jpg\"\r\n                        alt=\"Profile\"\r\n                    />\r\n                    <h3 className='text-lg font-semibold'>Dianne Russell</h3>\r\n                    <p className='text-gray-500'>Customer</p>\r\n                    <Link className='text-[#00B207] font-medium'>Edit Profile</Link>\r\n                </aside>\r\n                <aside className='pl-4 lg:pl-6 py-6 border-solid border-2 border-gray-100 rounded-md w-full'>\r\n                    <p className='text-gray-500 mb-3 uppercase'>Billing Address</p>\r\n                    <h3 className='text-lg font-semibold mb-2'>Dianne Russell</h3>\r\n                    <p className='text-gray-500 mb-2'>4140 Parker Rd. Allentown, New Mexico 31134</p>\r\n                    <p className='mb-2'>dainne.ressell@gmail.com</p>\r\n                    <p className='mb-4'>(671) 555-0110</p>\r\n                    <Link className='text-[#00B207] font-medium'>Edit Address</Link>\r\n                </aside>\r\n            </div>\r\n            <div className='w-full border-solid border-2 border-gray-100 rounded-md mb-6'>\r\n                <div className='flex justify-between m-4 mb-6 text-xl font-medium'>\r\n                    <p>Recent Order History</p>\r\n                    <Link to={\"/user/dashboard/order-history\"} className='text-[#00B207] font-medium'>View All</Link>\r\n                </div>\r\n                {\r\n                    loading ? <Spinner></Spinner> : (<OrderHistory orders={orders.slice(0, 3)}></OrderHistory>)\r\n\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserDashboard;","export default function formattedDateName(date) {\r\n    date = new Date(date);\r\n    const monthNames = [\r\n        \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n    ];\r\n    \r\n    // Extract the day, month, and year from the Date object\r\n    const day = date.getDate();\r\n    const month = monthNames[date.getMonth()]; // getMonth() returns 0-based index\r\n    const year = date.getFullYear();\r\n\r\n    return `${day} ${month}, ${year}`;\r\n}","import React from 'react';\r\nimport formattedDateName from '../../../utils/useGetFormatedDate';\r\n\r\nconst OrderHistory = ({ orders }) => {\r\n    return (\r\n        <table className='w-full mb-8'>\r\n            <thead className='text-left'>\r\n                <tr className='uppercase bg-gray-100 text-gray-700'>\r\n                    <th className='text-xs font-normal py-3 pl-4'>Order ID</th>\r\n                    <th className='text-xs font-normal py-3'>Date</th>\r\n                    <th className='text-xs font-normal py-3'>Total</th>\r\n                    <th className='text-xs font-normal py-3'>Status</th>\r\n                    <th className='text-xs font-normal py-3'></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    orders.map((order) => (\r\n                        <tr key={order._id} className='text-gray-800'>\r\n                            <td className='text-sm py-3 pl-4'>#{order._id}</td>\r\n                            <td className='text-sm py-3'>{formattedDateName(order.orderDate)}</td>\r\n                            <td className='text-sm py-3'><span className='font-medium'>${order.totalAmount.toFixed(2)}</span> ({order.productList.length} Products)</td>\r\n                            <td className='text-sm py-3 capitalize'>{order.orderStatus}</td>\r\n                            <td className='text-center'>\r\n                                <a href={`/user/dashboard/order-history/${order._id}`} className='text-[#00B207] font-medium'>View Details</a>\r\n                            </td>\r\n                        </tr>\r\n                    ))\r\n                }\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default OrderHistory;"],"names":["UserDashboard","setPageNav","useContext","PageNavContext","orders","setOrders","useState","loading","setLoading","error","setError","useEffect","async","result","fetchData","getData","title","navLink","_jsxs","className","children","message","_Fragment","_jsx","src","alt","Link","to","Spinner","OrderHistory","slice","formattedDateName","date","day","Date","getDate","month","getMonth","year","getFullYear","concat","_ref","map","order","_id","orderDate","totalAmount","toFixed","productList","length","orderStatus","href"],"sourceRoot":""}